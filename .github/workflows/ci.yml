name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.5

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build Go project
        run: |
          go env -w CGO_ENABLED=0
          go env -w GOPROXY=https://goproxy.cn,direct
          go env -w GOPRIVATE=github.com
          go mod tidy
          go build -trimpath -ldflags "-s -w" -o core_api api/core.go
          go build -trimpath -ldflags "-s -w" -o core_rpc rpc/core.go

      - name: Verify core_api exists
        run: |
          if [ ! -f core_api ]; then
            echo "core_api file not found!"
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Alibaba Cloud ACR
        if: github.ref == 'refs/heads/master'
        env:
          ACR_REGISTRY: ${{ secrets.ACR_REGISTRY }}
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
        run: echo $ACR_PASSWORD | docker login $ACR_REGISTRY -u $ACR_USERNAME --password-stdin

      - name: Build and push Docker image - API
        if: github.ref == 'refs/heads/master'
        env:
          ACR_REGISTRY: ${{ secrets.ACR_REGISTRY }}
        run: |
          docker build -t $ACR_REGISTRY/dkzx_test/core-api-docker:latest -f Dockerfile-api .
          docker push $ACR_REGISTRY/dkzx_test/core-api-docker:latest
          # 可以启用版本tag推送
          # docker build -t $ACR_REGISTRY/dkzx_test/core-api-docker:${{ github.sha }} -f Dockerfile-api .
          # docker push $ACR_REGISTRY/dkzx_test/core-api-docker:${{ github.sha }}

      - name: Build and push Docker image - RPC
        if: github.ref == 'refs/heads/master'
        env:
          ACR_REGISTRY: ${{ secrets.ACR_REGISTRY }}
        run: |
          docker build -t $ACR_REGISTRY/dkzx_test/core-rpc-docker:latest -f Dockerfile-rpc .
          docker push $ACR_REGISTRY/dkzx_test/core-rpc-docker:latest
          # 可以启用版本tag推送
          # docker build -t $ACR_REGISTRY/dkzx_test/core-rpc-docker:${{ github.sha }} -f Dockerfile-rpc .
          # docker push $ACR_REGISTRY/dkzx_test/core-rpc-docker:${{ github.sha }}