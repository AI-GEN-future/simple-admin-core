import "base.api"

type (
    // The response data of menu information | 菜单信息
    MenuInfo {
        BaseInfo

        // Translated Name
        Trans string `json:"trans,optional"`

        // Level
        Level  uint32 `json:"level,optional"`

        // ParentId
        ParentId  uint64 `json:"parentId,optional"`

        // Path
        Path  string `json:"path,optional"`

        // Name
        Name  string `json:"name,optional"`

        // Redirect
        Redirect  string `json:"redirect,optional"`

        // Component
        Component  string `json:"component,optional"`

        // Sort
        Sort  uint32 `json:"sort,optional"`

        // Disabled
        Disabled  bool `json:"disabled,optional"`

        // Meta
        Meta  Meta `json:"meta"`

        // MenuType
        MenuType  uint32 `json:"menuType,optional"`
    }

    // The meta data of menu | 菜单的meta数据
    // swagger:model Meta
    Meta {
        // Menu title show in page | 菜单显示名
        // Max length: 50
        Title     string         `json:"title" validate:"max=50"`

        // Menu Icon | 菜单图标
        // Max length: 50
        Icon      string         `json:"icon" validate:"max=50"`

        // Hide menu | 隐藏菜单
        HideMenu  bool           `json:"hideMenu" validate:"boolean"`

        // If hide the breadcrumb | 隐藏面包屑
        HideBreadcrumb bool      `json:"hideBreadcrumb,optional" validate:"boolean"`

        // Current active menu, if not nil, it will active the tab | 当前激活的菜单
        // Max length: 30
        CurrentActiveMenu string `json:"currentActiveMenu,optional"`

        // Do not keep alive the tab | 不缓存Tab
        IgnoreKeepAlive  bool `json:"ignoreKeepAlive,optional" validate:"boolean"`

        // Hide the tab header | 当前路由不在标签页显示
        HideTab   bool `json:"hideTab,optional" validate:"boolean"`

        // Iframe path | 内嵌iframe的地址
        FrameSrc  string `json:"frameSrc,optional"`

        // The route carries parameters or not | 如果该路由会携带参数，且需要在tab页上面显示。则需要设置为true
        CarryParam  bool `json:"carryParam,optional" validate:"boolean"`

        // Hide children menu or not | 隐藏所有子菜单
        HideChildrenInMenu  bool `json:"hideChildrenInMenu,optional" validate:"boolean"`

        // Affix tab | 是否固定标签
        Affix  bool `json:"affix,optional" validate:"boolean"`

        // The maximum number of pages the router can open | 动态路由可打开Tab页数
        DynamicLevel  uint32 `json:"dynamicLevel" validate:"number,lt=30"`

        // The real path of the route without dynamic part | 动态路由的实际Path, 即去除路由的动态部分
        RealPath  string `json:"realPath,optional"`
    }

    // The response data of menu list | 菜单列表返回数据
    MenuListResp {
        BaseDataInfo

        // Menu list data | Menu列表数据
        Data MenuListInfo `json:"data"`
    }

    // Menu list data | Menu列表数据
    MenuListInfo {
        BaseListInfo

        // The menu list data | 菜单列表数据
        Data []MenuInfo `json:"data"`
    }

    // Menu information response | 菜单信息返回体
    MenuInfoResp {
        BaseDataInfo

        // Menu information | Menu数据
        Data MenuInfo `json:"data"`
    }

    // Menu information plain | 菜单信息无嵌套
    MenuPlainInfo {
        Id  uint64  `json:"id"`

        // Translated Name
        Trans string `json:"trans,optional"`

        // Level
        Level  uint32 `json:"level,optional"`

        // ParentId
        ParentId  uint64 `json:"parentId,optional"`

        // Path
        Path  string `json:"path,optional"`

        // Name
        Name  string `json:"name,optional"`

        // Redirect
        Redirect  string `json:"redirect,optional"`

        // Component
        Component  string `json:"component,optional"`

        // Sort
        Sort  uint32 `json:"sort,optional"`

        // Disabled
        Disabled  bool `json:"disabled,optional"`

        // MenuType
        MenuType  uint32 `json:"menuType,optional"`



        // Menu title show in page | 菜单显示名
        // Max length: 50
        Title     string         `json:"title" validate:"max=50"`

        // Menu Icon | 菜单图标
        // Max length: 50
        Icon      string         `json:"icon" validate:"max=50"`

        // Hide menu | 隐藏菜单
        HideMenu  bool           `json:"hideMenu" validate:"boolean"`

        // If hide the breadcrumb | 隐藏面包屑
        HideBreadcrumb bool      `json:"hideBreadcrumb,optional" validate:"boolean"`

        // Current active menu, if not nil, it will active the tab | 当前激活的菜单
        // Max length: 30
        CurrentActiveMenu string `json:"currentActiveMenu,optional"`

        // Do not keep alive the tab | 不缓存Tab
        IgnoreKeepAlive  bool `json:"ignoreKeepAlive,optional" validate:"boolean"`

        // Hide the tab header | 当前路由不在标签页显示
        HideTab   bool `json:"hideTab,optional" validate:"boolean"`

        // Iframe path | 内嵌iframe的地址
        FrameSrc  string `json:"frameSrc,optional"`

        // The route carries parameters or not | 如果该路由会携带参数，且需要在tab页上面显示。则需要设置为true
        CarryParam  bool `json:"carryParam,optional" validate:"boolean"`

        // Hide children menu or not | 隐藏所有子菜单
        HideChildrenInMenu  bool `json:"hideChildrenInMenu,optional" validate:"boolean"`

        // Affix tab | 是否固定标签
        Affix  bool `json:"affix,optional" validate:"boolean"`

        // The maximum number of pages the router can open | 动态路由可打开Tab页数
        DynamicLevel  uint32 `json:"dynamicLevel" validate:"number,lt=30"`

        // The real path of the route without dynamic part | 动态路由的实际Path, 即去除路由的动态部分
        RealPath  string `json:"realPath,optional"`
    }

    // Menu list data | 菜单列表数据
    MenuPlainInfoList {
        BaseListInfo

        // The menu list data | 菜单列表数据
        Data []MenuPlainInfo `json:"data"`
    }

    // Menu list data response | 菜单列表数据返回体
    MenuPlainInfoListResp {
        BaseDataInfo

        // Menu list data | Menu列表数据
        Data MenuPlainInfoList `json:"data"`
    }
)

@server(
    jwt: Auth
    group: menu
    middleware: Authority
)

service core {
    // Create menu information | 创建菜单
    @handler createMenu
    post /menu/create (MenuPlainInfo) returns (BaseMsgResp)

    // Update menu information | 更新菜单
    @handler updateMenu
    post /menu/update (MenuPlainInfo) returns (BaseMsgResp)

    // Delete menu information | 删除菜单信息
    @handler deleteMenu
    post /menu/delete (IDReq) returns (BaseMsgResp)

    // Get menu list | 获取菜单列表
    @handler getMenuList
    get /menu/list returns (MenuPlainInfoListResp)

    // Get menu list by role | 获取菜单列表
    @handler getMenuListByRole
    get /menu/role/list returns (MenuListResp)

    // Get Menu by ID | 通过ID获取菜单
    @handler getMenuById
    post /menu (IDReq) returns (MenuInfoResp)
}
