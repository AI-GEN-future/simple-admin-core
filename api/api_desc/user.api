syntax = "v1"

info(
    title: "user management"
    desc: "user management api"
    author: "ryansu"
    email: "yuansu.china.work@gmail.com"
    version: "v1.0"
)

import "base.api"

type (
    // swagger:parameters login
    // login request
    // 登录参数
    LoginReq {
        // User Name | 用户名
        // required : true
        Username   string `json:"username"`
        // Password | 密码
        // required : true
        Password   string `json:"password"`
        // Captcha Id which store in redis | 验证码编号, 存在redis中
        // required : true
        CaptchaId  string `json:"captchaId"`
        // The Captcha which users input | 用户输入的验证码
        // required : true
        Captcha    string `json:"captcha"`
    }

    // swagger: response LoginResp
    // The login response data | 登录返回数据
    LoginResp {
        // User's UUID | 用户的UUID
        UserId       string          `json:"userId"`
        // User's role information| 用户的角色信息
        Role         RoleInfoSimple  `json:"role"`
        // Token for authorization | 验证身份的token
        Token        string          `json:"token"`
        // Expire timestamp | 过期时间戳
        Expire       uint64          `json:"expire"`
    }

    RoleInfoSimple {
        RoleName   string `json:"roleName"`
        Value      string `json:"value"`
    }

    // swagger:parameters register
    // register request
    // 注册参数
    RegisterReq {
        // User Name | 用户名
        // required : true
        Username  string `json:"username"`
        // Password | 密码
        // required : true
        Password  string `json:"password"`
        // Captcha Id which store in redis | 验证码编号, 存在redis中
        // required : true
        CaptchaId string `json:"captchaId"`
        // The Captcha which users input | 用户输入的验证码
        // required : true
        Captcha   string `json:"captcha"`
        // The user's email address | 用户的邮箱
        // required : true
        Email     string `json:"email"`
    }

    // swagger:parameters changePassword
    // change user's password request
    // 注册参数
    ChangePasswordReq {
        // User's UUID | 用户的UUID
        // required: true
        UUID        string `json:"uuid"`
        // User's old password | 用户旧密码
        // required: true
        OldPassword string `json:"oldPassword"`
        // User's new password | 用户新密码
        // required: true
        NewPassword string `json:"newPassword"`
    }

    // swagger:parameters modifyUser
    // modify user's infomation request
    // 修改用户信息参数
    ModifyInfoReq {
        // User's UUID | 用户的UUID
        // required: true
        UUID         string       `json:"UUID"`
        // User's nickname | 用户的昵称
        // required: true
        Nickname     string       `json:"nickname"`
        // User's mobile phone number | 用户的手机号码
        // required: true
        Mobile       string       `json:"mobile"`
        // User's role id | 用户的角色Id
        // required: true
        RoleId       uint32       `json:"roleId"`
        // The user's email address | 用户的邮箱
        // required : true
        Email        string       `json:"email"`
        // The user's avatar path | 用户的头像路径
        // required : true
        Avatar       string       `json:"avatar"`
        // The user's layout mode | 用户的布局
        // required : true
        SideMode     string       `json:"sideMode"`
    }

    // swagger: response UserInfoResp
    // The response data of user's information | 用户信息返回数据
    UserInfoResp {
        // User's id | 用户Id
        Id           int64        `json:"id"`
        // User Name | 用户名
        Username     string       `json:"username"`
        // User's nickname | 用户的昵称
        Nickname     string       `json:"nickname"`
        // User's mobile phone number | 用户的手机号码
        Mobile       string       `json:"mobile"`
        // User's role id | 用户的角色Id
        RoleId       uint32       `json:"roleId"`
        // The user's email address | 用户的邮箱
        Email        string       `json:"email"`
        // The user's avatar path | 用户的头像路径
        Avatar       string       `json:"avatar"`
        // The user's layout mode | 用户的布局
        SideMode     string       `json:"sideMode"`
        // The user's status | 用户状态
        // 1 normal, 2 ban | 1 正常 2 拉黑
        Status       int32        `json:"status"`
        CreateAt     int64        `json:"createAt"`
        UpdateAt     int64        `json:"updateAt"`
    }

    // swagger: response GetUserInfoResp
    // The response data of user's basic information | 用户基本信息返回数据
    GetUserInfoResp {
        // User's UUID | 用户的UUID
        UUID         string       `json:"UUID"`
        // User name | 用户名
        Username     string       `json:"username"`
        // user's nickname | 用户的昵称
        Nickname     string       `json:"nickname"`
        // The user's avatar path | 用户的头像路径
        Avatar       string       `json:"avatar"`
        // User's role information| 用户的角色信息
        Roles        GetUserRoleInfo `json:"roles"`
    }


    GetUserRoleInfo {
        // Role name | 角色名
        RoleName   string `json:"roleName"`
        // Role value for permission control | 角色值用于前端页面组件显示权限
        Value      string `json:"value"`
    }

    // swagger: response UserListResp
    // The response data of user's basic information | 用户基本信息返回数据
    UserListResp {
        PageList
        // The user list data | 用户列表数据
        Data    []UserInfoResp  `json:"data"`
    }

    // swagger: response UserListResp
    // The permission code for front end permission contrl
    // 权限码： 用于前端权限控制
    PermCodeResp {
        // Permission code data | 权限码数据
        Data []string `json:"data"`
    }

    // swagger:parameters createOrUpdateUser
    // Create or update user information request
    // 创建或更新用户信息
    CreateOrUpdateUserReq {
        // User's id | 用户Id
        Id           int64        `json:"id"`
        // User Name | 用户名
        Username     string       `json:"username"`
        // User's nickname | 用户的昵称
        Nickname     string       `json:"nickname"`
        // Password | 密码
        Password     string       `json:"password"`
        // User's mobile phone number | 用户的手机号码
        Mobile       string       `json:"mobile"`
        // User's role id | 用户的角色Id
        RoleId       uint32       `json:"roleId"`
        // The user's email address | 用户的邮箱
        Email        string       `json:"email"`
        // The user's avatar path | 用户的头像路径
        Avatar       string       `json:"avatar"`
        // The user's status | 用户状态
        // 1 normal, 2 ban | 1 正常 2 拉黑
        Status       int32        `json:"status"`
    }

    // swagger:parameters getUserList
    // Get user list request
    // 获取用户列表请求参数
    GetUserListReq {
        // Page number | 第几页
        // required : true
        Page uint64 `json:"page"`
        // Page size | 单页数据行数
        // required : true
        PageSize uint64 `json:"pageSize"`
        // User Name | 用户名
        // required : true
        Username string `json:"username"`
        // User's nickname | 用户的昵称
        // required: true
        Nickname string `json:"nickname"`
        // User's mobile phone number | 用户的手机号码
        // required: true
        Mobile string `json:"mobile"`
        // The user's email address | 用户的邮箱
        // required : true
        Email string  `json:"email"`
        // User's role id | 用户的角色Id
        // required: true
        RoleId uint64 `json:"roleId"`
    }
)

@server(
    group: user
)

service core {
    // swagger:route POST /user/login user login
    // Login API | 登录API
    // Responses:
    //   200: LoginResp
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler loginHandler
    post /user/login (LoginReq) returns (LoginResp)

    // swagger:route POST /user/register user register
    // Register API | 注册API
    // Responses:
    //   200: SimpleMsg
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler registerHandler
    post /user/register (RegisterReq) returns (SimpleMsg)
}

@server(
    group : user
    jwt : Auth
    middleware: Authority
)

service core {
    // swagger:route POST /user/change-password user changePassword
    // Change Password API | 修改密码API
    // Responses:
    //   200: SimpleMsg
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler changePasswordHandler
    post /user/change-password (ChangePasswordReq) returns (SimpleMsg)

    // swagger:route GET /user/info user getUserInfo
    // Get user basic infomation API | 获取用户基本信息API
    // Responses:
    //   200: GetUserInfoResp
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler getUserInfoHandler
    get /user/info returns (GetUserInfoResp)

    // swagger:route POST /user user createOrUpdateUser
    // Create or update user's information API | 新增或更新用户
    // Responses:
    //   200: SimpleMsg
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler createOrUpdateUserHandler
    post /user (CreateOrUpdateUserReq) returns (SimpleMsg)

    // swagger:route POST /user/list user getUserList
    // Get user list API | 获取用户列表
    // Responses:
    //   200: UserListResp
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler getUserListHandler
    post /user/list (GetUserListReq) returns (UserListResp)

    // swagger:route POST /user/modify user modifyUser
    // Modify user infomation API | 修改用户信息
    // Responses:
    //   200: SimpleMsg
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler modifyUserHandler
    post /user/modify  (ModifyInfoReq) returns (SimpleMsg)

    // swagger:route DELETE /user/modify user deleteUser
    // Delete user infomation API | 删除用户信息
    // Responses:
    //   200: SimpleMsg
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler deleteUserHandler
    delete /user (IdReq) returns (SimpleMsg)

    // swagger:route GET /user/perm user getUserPermCode
    // Get user's permission code API | 获取用户权限码
    // Responses:
    //   200: PermCodeResp
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler getUserPermCodeHandler
    get /user/perm returns (PermCodeResp)
}
